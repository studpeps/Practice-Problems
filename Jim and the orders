import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the jimOrders function below.
    static int[] jimOrders(int[][] orders) {
     int n=orders.length;
     int[] arr=new int[n];
     int[] sum=new int[n];
     for(int i=0;i<n;i++)
     {
         arr[i]=i+1;
     }
      for(int i=0;i<n;i++)
      {
          sum[i]=orders[i][0]+orders[i][1];
      }
      int min,pos=0,t=0;
      for(int i=0;i<n-1;i++)
      {
          min=i;
          for(int j=i+1;j<n;j++)
          {
              if(sum[j]<sum[min])
              {
                  min=j;
              }
          }
          t=sum[min];
          sum[min]=sum[i];
          sum[i]=t;
          t=arr[min];
          arr[min]=arr[i];
          arr[i]=t;
      }
      return (arr);
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[][] orders = new int[n][2];

        for (int i = 0; i < n; i++) {
            String[] ordersRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 2; j++) {
                int ordersItem = Integer.parseInt(ordersRowItems[j]);
                orders[i][j] = ordersItem;
            }
        }

        int[] result = jimOrders(orders);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
