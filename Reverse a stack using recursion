import java.util.Stack; 
  
class Test { 

    static Stack<Character> st = new Stack<>(); 
      
    /* Below is a recursive function  
     that inserts an element 
     at the bottom of a stack. */
    static void insert_at_bottom(char x) 
    { 
  
        if(st.isEmpty()) 
            st.push(x); 
  
        else
        { 
            char a = st.peek(); 
            st.pop(); 
            insert_at_bottom(x); 
  
            // push allthe items held  
            st.push(a); 
        } 
    } 
      
    // Below is the function that  
    // reverses the given stack using 
    // insert_at_bottom() 
    static void reverse() 
    { 
        if(st.size() > 0) 
        {
            char x = st.peek(); 
            st.pop(); 
            reverse(); 
              
            /* Insert all the items held  
             in Function Call Stack 
             one by one from the bottom 
             to top. Every item is 
             inserted at the bottom */ 
            insert_at_bottom(x); 
        } 
    } 
     
    public static void main(String[] args)  
    { 
        st.push('1'); 
        st.push('2'); 
        st.push('3'); 
        st.push('4'); 
          
        System.out.println("Original Stack");   
        System.out.println(st); 
        reverse(); 
          
        System.out.println("Reversed Stack"); 
          
        System.out.println(st); 
    } 
} 
